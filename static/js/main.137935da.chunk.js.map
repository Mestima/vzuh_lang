{"version":3,"sources":["components/translator/index.js","components/mainForm/index.js","App.js","serviceWorker.js","index.js"],"names":["Object","prototype","getKey","value","key","this","hasValue","keyWord","mainForm","onTextChange","document","getElementById","toVzuh","onVzuhChange","toText","class","for","id","rows","onChange","text","res","i","length","tmp","charAt","hasOwnProperty","vzuh","React","Component","App","className","href","target","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"gTAEAA,OAAOC,UAAUC,OAAS,SAASC,GACjC,IAAI,IAAIC,KAAOC,KACb,GAAGA,KAAKD,IAAQD,EACd,OAAOC,EAGX,MAAO,IAGTJ,OAAOC,UAAUK,SAAW,SAASH,GACnC,IAAI,IAAIC,KAAOC,KACb,GAAGA,KAAKD,IAAQD,EACd,OAAO,EAGX,OAAO,GAGT,IAAMI,EAAU,CACdvGcC,E,2MACnBC,aAAe,WACbC,SAASC,eAAe,aAAaR,MAAQ,EAAKS,OAAOF,SAASC,eAAe,aAAaR,Q,EAGhGU,aAAe,WACbH,SAASC,eAAe,aAAaR,MAAQ,EAAKW,OAAOJ,SAASC,eAAe,aAAaR,Q,wEAI9F,OAAQ,oCACN,8BACE,yBAAKY,MAAM,cACT,2BAAOC,IAAI,aAAX,8EACA,8BAAUD,MAAM,eAAeE,GAAG,YAAYC,KAAK,IAAIC,SAAUd,KAAKI,gBAExE,yBAAKM,MAAM,cACT,2BAAOC,IAAI,aAAX,4DACA,8BAAUD,MAAM,eAAeE,GAAG,YAAYC,KAAK,IAAIC,SAAUd,KAAKQ,sB,8MDyF9ED,OAAS,SAACQ,GAER,IADA,IAAIC,EAAM,GACDC,EAAI,EAAGA,EAAGF,EAAKG,OAAQD,IAAK,CACnC,IAAIE,EAAMJ,EAAKK,OAAOH,GAClBf,EAAQmB,eAAeF,KACzBH,GAAOd,EAAQiB,IAGnB,OAAOH,G,EAETP,OAAS,SAACa,GAGR,IAFA,IAAIN,EAAM,GACNG,EAAM,GACDF,EAAI,EAAGA,EAAGK,EAAKJ,OAAQD,IAC9BE,GAAOG,EAAKF,OAAOH,IACff,EAAQD,SAASkB,IAAuB,GAAdA,EAAID,QAA6B,GAAdC,EAAID,SACnDF,GAAOd,EAAQL,OAAOsB,GACtBA,EAAM,IAGV,OAAOH,G,6BArB6BO,IAAMC,YEtF/BC,MApBf,WACE,OACE,yBAAKC,UAAU,OACb,yBAAKA,UAAU,YACb,4BAAQA,UAAU,YAChB,yHAEF,kBAAC,EAAD,MACA,uBACEA,UAAY,WACZC,KAAO,uCACPC,OAAS,UAHX,wFCDYC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNC,IAASC,OAAO,kBAAC,EAAD,MAAS9B,SAASC,eAAe,SD0H3C,kBAAmB8B,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.137935da.chunk.js","sourcesContent":["import React from 'react';\n\nObject.prototype.getKey = function(value) {\n  for(var key in this){\n    if(this[key] == value){\n      return key;\n    }\n  }\n  return \"\";\n};\n\nObject.prototype.hasValue = function(value) {\n  for(var key in this){\n    if(this[key] == value){\n      return true;\n    }\n  }\n  return false;\n};\n\nconst keyWord = {\n  'А': 'жжжжжжж',\n  'Б': 'жжжжжжЖ',\n  'В': 'жжжжжЖж',\n  'Г': 'жжжжжЖЖ',\n  'Д': 'жжжжЖжж',\n  'Е': 'жжжжЖжЖ',\n  'Ё': 'жжжжЖЖж',\n  'Ж': 'жжжжЖЖЖ',\n  'З': 'жжжЖжжж',\n  'И': 'жжжЖжжЖ',\n  'Й': 'жжжЖжЖж',\n  'К': 'жжжЖжЖЖ',\n  'Л': 'жжжЖЖжж',\n  'М': 'жжжЖЖжЖ',\n  'Н': 'жжжЖЖЖж',\n  'О': 'жжжЖЖЖЖ',\n  'П': 'жжЖжжжж',\n  'Р': 'жжЖжжжЖ',\n  'С': 'жжЖжжЖж',\n  'Т': 'жжЖжжЖЖ',\n  'У': 'жжЖжЖжж',\n  'Ф': 'жжЖжЖжЖ',\n  'Х': 'жжЖжЖЖж',\n  'Ц': 'жжЖжЖЖЖ',\n  'Ч': 'жжЖЖжжж',\n  'Ш': 'жжЖЖжжЖ',\n  'Щ': 'жжЖЖжЖж',\n  'Ъ': 'жжЖЖжЖЖ',\n  'Ы': 'жжЖЖЖжж',\n  'Ь': 'жжЖЖЖжЖ',\n  'Э': 'жжЖЖЖЖж',\n  'Ю': 'жжЖЖЖЖЖ',\n  'Я': 'жЖжжжжж',\n  'а': 'жЖжжжжЖ',\n  'б': 'жЖжжжЖж',\n  'в': 'жЖжжжЖЖ',\n  'г': 'жЖжжЖжж',\n  'д': 'жЖжжЖжЖ',\n  'е': 'жЖжжЖЖж',\n  'ё': 'жЖжжЖЖЖ',\n  'ж': 'жЖжЖжжж',\n  'з': 'жЖжЖжжЖ',\n  'и': 'жЖжЖжЖж',\n  'й': 'жЖжЖжЖЖ',\n  'к': 'жЖжЖЖжж',\n  'л': 'жЖжЖЖжЖ',\n  'м': 'жЖжЖЖЖж',\n  'н': 'жЖжЖЖЖЖ',\n  'о': 'жЖЖжжжж',\n  'п': 'жЖЖжжжЖ',\n  'р': 'жЖЖжжЖж',\n  'с': 'жЖЖжжЖЖ',\n  'т': 'жЖЖжЖжж',\n  'у': 'жЖЖжЖжЖ',\n  'ф': 'жЖЖжЖЖж',\n  'х': 'жЖЖжЖЖЖ',\n  'ц': 'жЖЖЖжжж',\n  'ч': 'жЖЖЖжжЖ',\n  'ш': 'жЖЖЖжЖж',\n  'щ': 'жЖЖЖжЖЖ',\n  'ъ': 'жЖЖЖЖжж',\n  'ы': 'жЖЖЖЖжЖ',\n  'ь': 'жЖЖЖЖЖж',\n  'э': 'жЖЖЖЖЖЖ',\n  'ю': 'Жжжжжжж',\n  'я': 'ЖжжжжжЖ',\n  ',': 'ЖжжжжЖж',\n  '!': 'ЖжжжжЖЖ',\n  '.': 'ЖжжжЖжж',\n  '?': 'ЖжжжЖжЖ',\n  ')': 'ЖжжжЖЖж',\n  '(': 'ЖжжжЖЖЖ',\n  '-': 'ЖжжЖжжж',\n  '\"': 'ЖжжЖжжЖ',\n  '1': 'ЖжжЖжЖж',\n  '2': 'ЖжжЖжЖЖ',\n  '3': 'ЖжжЖЖжж',\n  '4': 'ЖжжЖЖжЖ',\n  '5': 'ЖжжЖЖЖж',\n  '6': 'ЖжжЖЖЖЖ',\n  '7': 'ЖжЖжжжж',\n  '8': 'ЖжЖжжжЖ',\n  '9': 'ЖжЖжжЖж',\n  '0': 'ЖжЖжжЖЖ',\n  '+': 'ЖжЖжЖжж',\n  '/': 'ЖжЖжЖжЖ',\n  '*': 'ЖжЖжЖЖж',\n  ' ': 'в'\n}\n\nexport default class Translator extends React.Component {\n  toVzuh = (text) => {\n    var res = \"\";\n    for (var i = 0; i< text.length; i++) {\n      var tmp = text.charAt(i);\n      if (keyWord.hasOwnProperty(tmp)) {\n        res += keyWord[tmp];\n      }\n    }\n    return res;\n  }\n  toText = (vzuh) => {\n    var res = \"\";\n    var tmp = \"\";\n    for (var i = 0; i< vzuh.length; i++) {\n      tmp += vzuh.charAt(i);\n      if (keyWord.hasValue(tmp) && (tmp.length == 7 || tmp.length == 1)) {\n        res += keyWord.getKey(tmp);\n        tmp = \"\";\n      }\n    }\n    return res;\n  }\n}\n","import React from 'react';\nimport './index.css';\n\nimport Translator from '../translator/';\n\nexport default class mainForm extends Translator {\n  onTextChange = () => {\n    document.getElementById('inputVzuh').value = this.toVzuh(document.getElementById('inputText').value);\n  }\n\n  onVzuhChange = () => {\n    document.getElementById('inputText').value = this.toText(document.getElementById('inputVzuh').value);\n  }\n\n  render(){\n    return (<>\n      <form>\n        <div class=\"form-group\">\n          <label for=\"inputText\">Русский текст:</label>\n          <textarea class=\"form-control\" id=\"inputText\" rows=\"7\" onChange={this.onTextChange}></textarea>\n        </div>\n        <div class=\"form-group\">\n          <label for=\"inputVzuh\">Вжух текст:</label>\n          <textarea class=\"form-control\" id=\"inputVzuh\" rows=\"7\" onChange={this.onVzuhChange}></textarea>\n        </div>\n      </form>\n    </>);\n  }\n}\n","import React from 'react';\nimport './App.css';\n\nimport Form from './components/mainForm/';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div className=\"App-main\">\n        <header className=\"App-logo\">\n          <h1>\"Вжух\" переводчик!</h1>\n        </header>\n        <Form />\n        <a\n          className = \"App-link\"\n          href = \"https://github.com/Mestima/vzuh_lang\"\n          target = \"_blank\"\n        >\n          Этот проект на GitHub\n        </a>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}